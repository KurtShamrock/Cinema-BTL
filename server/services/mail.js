require('dotenv').config();
import { OAuth2Client } from 'google-auth-library';
import nodemailer from 'nodemailer';

const myOAuth2Client = new OAuth2Client(
  process.env.GOOGLE_MAILER_CLIENT_ID,
  process.env.GOOGLE_MAILER_CLIENT_SECRET
);
myOAuth2Client.setCredentials({
  refresh_token: process.env.GOOGLE_MAILER_REFRESH_TOKEN,
});
export default class MailService {
  static async sendMail(destination, subject, content) {
    try {
      // L·∫•y th√¥ng tin g·ª≠i l√™n t·ª´ client qua body
      // const { email, subject, content } = req.body;
      // if (!email || !subject || !content)
      //   throw new Error('Please provide email, subject and content!');
      /**
       * L·∫•y AccessToken t·ª´ RefreshToken (b·ªüi v√¨ Access Token c·ª© m·ªôt kho·∫£ng th·ªùi gian ng·∫Øn s·∫Ω b·ªã h·∫øt h·∫°n)
       * V√¨ v·∫≠y m·ªói l·∫ßn s·ª≠ d·ª•ng Access Token, ch√∫ng ta s·∫Ω generate ra m·ªôt th·∫±ng m·ªõi l√† ch·∫Øc ch·∫Øn nh·∫•t.
       */
      const myAccessTokenObject = await myOAuth2Client.getAccessToken();
      // Access Token s·∫Ω n·∫±m trong property 'token' trong Object m√† ch√∫ng ta v·ª´a get ƒë∆∞·ª£c ·ªü tr√™n
      const myAccessToken = myAccessTokenObject?.token;
      // T·∫°o m·ªôt bi·∫øn Transport t·ª´ Nodemailer v·ªõi ƒë·∫ßy ƒë·ªß c·∫•u h√¨nh, d√πng ƒë·ªÉ g·ªçi h√†nh ƒë·ªông g·ª≠i mail
      const transport = nodemailer.createTransport({
        service: 'gmail',
        auth: {
          type: 'OAuth2',
          user: process.env.ADMIN_EMAIL_ADDRESS,
          clientId: process.env.GOOGLE_MAILER_CLIENT_ID,
          clientSecret: process.env.GOOGLE_MAILER_CLIENT_SECRET,
          refresh_token: process.env.GOOGLE_MAILER_REFRESH_TOKEN,
          accessToken: myAccessToken,
        },
      });
      // mailOption l√† nh·ªØng th√¥ng tin g·ª≠i t·ª´ ph√≠a client l√™n th√¥ng qua API
      const mailOptions = {
        from: `BTL Cinemas üìΩÔ∏è <${process.env.ADMIN_EMAIL_ADDRESS}>`,
        to: destination, // G·ª≠i ƒë·∫øn ai?
        subject: subject, // Ti√™u ƒë·ªÅ email
        html: `<h3>${content}</h3>`, // N·ªôi dung email
      };
      // G·ªçi h√†nh ƒë·ªông g·ª≠i email
      const info = await transport.sendMail(mailOptions);
      // Kh√¥ng c√≥ l·ªói g√¨ th√¨ tr·∫£ v·ªÅ success
      // res.status(200).json({ message: 'Email sent successfully.' });
      console.log(info);
    } catch (error) {
      // C√≥ l·ªói th√¨ c√°c b·∫°n log ·ªü ƒë√¢y c≈©ng nh∆∞ g·ª≠i message l·ªói v·ªÅ ph√≠a client
      console.log(error);
      // res.status(500).json({ errors: error.message });
    }
  }
}

// Run application

// export default class MailService {
//   static async sendMail(destination, subject, content) {
//     const transporter = nodemailer.createTransport(config);
//     try {
//       const option = {
//         from: `BTL Cinemas üìΩÔ∏è <${process.env.EMAIL_ACC}>`,
//         to: destination,
//         subject,
//         html: content,
//       };
//       const info = await transporter.sendMail(option);
//       console.log(info);
//       return true;
//     } catch (err) {
//       console.log(err);
//       return false;
//     } finally {
//       transporter.close();
//     }
//   }
